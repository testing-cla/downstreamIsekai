syntax = "proto2";

package isekai;

import "isekai/common/tdigest.proto";

option java_multiple_files = true;

message FalconHistograms {
  optional string host_id = 1;  // required
  repeated TransactionLatencyTdigest histogram = 2;
  repeated SchedulerLengthTdigest scheduler_histogram = 3;
  repeated ConnectionSchedulerQueuesTdigest connection_scheduler_histogram = 4;
  repeated ConnectionSchedulerQueueingDelayTdigest
      intra_connection_scheduler_queueing_delay_histogram = 6;
  repeated XoffDurationTdigest xoff_histogram = 5;
}

// Records the latency of each stage for all transaction types.
message TransactionLatencyTdigest {
  optional string transaction_type = 1;        // required
  optional string transaction_stage = 2;       // required
  optional proto.TDigest latency_tdigest = 3;  // required
}

// Records the total length of each scheduler type across all connections.
message SchedulerLengthTdigest {
  optional string scheduler_type = 1;         // required
  optional proto.TDigest length_tdigest = 2;  // required
}

// Records the lengths of each queue_type for each connection.
message ConnectionSchedulerQueuesTdigest {
  optional string connection_id = 1;  // required
  optional proto.TDigest pull_and_ordered_push_request_queue_tdigest =
      2;                                                            // required
  optional proto.TDigest unordered_push_request_queue_tdigest = 3;  // required
  optional proto.TDigest push_data_queue_tdigest = 4;               // required
  optional proto.TDigest push_grant_queue_tdigest = 5;              // required
  optional proto.TDigest pull_data_queue_tdigest = 6;               // required
}

// Records the queueing delay for various queue types.
message ConnectionSchedulerQueueingDelayTdigest {
  optional string connection_id = 1;  // required
  optional proto.TDigest pull_and_ordered_push_request_queue_tdigest =
      2;                                                            // required
  optional proto.TDigest unordered_push_request_queue_tdigest = 3;  // required
  optional proto.TDigest push_data_queue_tdigest = 4;               // required
  optional proto.TDigest tx_eligible_push_data_queue_tdigest = 7;   // required
  optional proto.TDigest push_grant_queue_tdigest = 5;              // required
  optional proto.TDigest pull_data_queue_tdigest = 6;               // required
}

// Records the xoff durations.
message XoffDurationTdigest {
  optional string xoff_type = 1;  // required to be set to either Falcon or RDMA
  optional proto.TDigest latency_tdigest = 2;  // required
}
